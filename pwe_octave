%% Prepare workspace
close all;
clear all;
clc;

%Введём необходимые переменные
C_11A=9*10^15;
C_12A=9*10^15;
C_21A=9*10^15;
C_22A=9*10^15;
C_44A=9*10^15;
C_11B=0.1*10^15;
C_12B=0.1*10^15;
C_21B=0.1*10^15;
C_22B=0.1*10^15;
C_44B=0.1*10^15;
с=3*10^8;
a11=1;
a12=0;
a13=0;
a21=0;
a22=1;
a23=0;
a31=0;
a32=0;
a33=1;
r_0=[0.01 0 0];
a=0.05;
rho_a=2300;
rho_b=1.5;

%Зададим базис прямой решётки
a1=[a11 a12 a13];
a2=[a21 a22 a23];
a3=[a31 a32 a33];

%Найдём объём элементарной ячейки
V=a11*(a22*a33-a23*a32)+a12*(a23*a31-a21*a33)+a13*(a21*a32-a22*a31);

%Найдём базис обратной решётки
b1=(2*pi.*[a22*a33-a23*a32 a23*a31-a21*a33 a21*a32-a22*a31])/V;
b2=(2*pi.*[a32*a13-a33*a12 a31*a13-a33*a11 a31*a12-a32*a11])/V;
b3=(2*pi.*[a12*a23-a13*a22 a11*a23-a13*a21 a11*a22-a12*a21])/V;

%Найдём длины базисных векторов обратной решётки
b1_length=sqrt(b1(1)^2+b1(2)^2+b1(3)^2);
b2_length=sqrt(b2(1)^2+b2(2)^2+b2(3)^2);
b3_length=sqrt(b3(1)^2+b3(2)^2+b3(3)^2);

%Найдём длину r_0
r0_lenght=sqrt(r_0(1)^2+r_0(2)^2+r_0(3)^2)

%Создадим массивы, в которые будем добавлять вектора Блоха К, вектора G' и вектора G''
K=zeros(729,3);
G_1=zeros(729,3);
d=1;
for i=(1:9),
  for j=(1:9),
    for w=(1:9),
      K(d,1)=(pi/sqrt(a11^2+a12^2+a13^2))*0.5/3*i;
      K(d,2)=(pi/sqrt(a21^2+a22^2+a23^2))*0.5/3*j;
      K(d,3)=(pi/sqrt(a31^2+a32^2+a33^2))*0.5/3*w;
      G_1(d,1)=(pi/b1_length)/3*i;
      G_1(d,2)=(pi/b2_length)/3*j;
      G_1(d,3)=(pi/b3_length)/3*w;
      d=d+1;
    endfor
  endfor
endfor


%Определим гамма-функцию Эйлера
function eiler=eiler(n)
  eiler=1;
  for i=(1:(n-1)),
    eiler=eiler*i;
  endfor
endfunction

%Определим функцию Бесселя первого порядка
function J1=J1(x)
  J1=0;
  for m=(0:5),
    J1=J1+((-1)^m)/(eiler(m+1)*eiler(m+2))*(x/2)^(2*m+1);
  endfor
endfunction

%Создадим массив заполненный векторами G'' для частного случая квадратной решётки со стороной a и массив заполненный плотностями. Также массив содержащий вектора G. И массив с C_ijkl
G_11=zeros(729,3);
rho_11=zeros(1,729);
C_11=zeros(1,729);
C_12=zeros(1,729);
C_21=zeros(1,729);
C_22=zeros(1,729);
C_44=zeros(1,729);
G=zeros(729,3);
d=1;
for x=(-13:13),
  for y=(-13:13),
    G_11(d,1)=(2*pi/a)*x;
    G_11(d,2)=(2*pi/a)*y;
    G_11(d,3)=(2*pi/a)*0;
    rho_11(d)=(rho_a-rho_b)*2*(pi*r0_lenght^2/a)*J1(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2))/(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2));
    C_11(d)=(C_11A-C_11B)*2*(pi*r0_lenght^2/a)*J1(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2))/(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2));
    C_12(d)=(C_12A-C_12B)*2*(pi*r0_lenght^2/a)*J1(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2))/(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2));
    C_21(d)=(C_21A-C_21B)*2*(pi*r0_lenght^2/a)*J1(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2))/(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2));
    C_22(d)=(C_22A-C_22B)*2*(pi*r0_lenght^2/a)*J1(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2))/(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2));
    C_44(d)=(C_44A-C_44B)*2*(pi*r0_lenght^2/a)*J1(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2))/(G_11(d,1)*r_0(1)+G_11(d,2)*r_0(2));
    G(d,1)=G_11(d,1)+G_1(d,1);
    G(d,2)=G_11(d,2)+G_1(d,2);
    G(d,3)=G_11(d,3)+G_1(d,3);
    d=d+1;
  endfor
endfor

%Создадим матрицы A и B и решим соответствующие уравнение
omega_solve=zeros(1,10000);
k_solve=zeros(1,10000);
d=1;
for i=(1:729),
  B_11=rho_11(i);
  B_22=rho_11(i);
  B_33=rho_11(i);
  A_11=C_11(d)*(G(i,1)+K(i,1))*(G_1(i,1)+K(i,1))+C_44(d)*(G(i,2)+K(i,2))*(G_1(i,2)+K(i,2));
  A_12=C_12(d)*(G(i,1)+K(i,1))*(G_1(i,2)+K(i,2))+C_44(d)*(G_1(i,1)+K(i,1))*(G(i,2)+K(i,2));
  A_21=C_12(d)*(G_1(i,1)+K(i,1))*(G(i,2)+K(i,2))+C_44(d)*(G_1(i,2)+K(i,2))*(G(i,1)+K(i,1));
  A_22=C_11(d)*(G(i,2)+K(i,2))*(G_1(i,2)+K(i,2))+C_44(d)*(G(i,1)+K(i,1))*(G_1(i,1)+K(i,1));
  A_33=C_44(d)*((G(i,1)+K(i,1))*(G_1(i,1)+K(i,1))+(G(i,2)+K(i,2))*(G_1(i,2)+K(i,2)));
  B=[B_11 0 0; 0 B_22 0; 0 0 B_33];
  A=[A_11 A_12 0; A_21 A_22 0; 0 0 A_33];
  for omega = 100:10:1000,
    if (omega^2*B_11-A_11)/A_12==A_21/(omega^2*B_22-A_22),
      if A_33==omega^2*B_33,
        omega_solve(d)=omega/c;
        k=K(i)(1)*b1_lenght+K(i)(2)*b2_length+K(i)(3)*b3_length;
        k_solve(d)=k;
        d=d+1;
      endif
    endif
  endfor
endfor


%Нанесём точки на график
y=omega_solve
x=k_solve
sz=1
scatter(x,y,sz)


